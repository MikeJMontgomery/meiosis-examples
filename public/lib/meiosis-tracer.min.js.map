{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///meiosis-tracer.min.js","webpack:///webpack/bootstrap 7517db2e7c36117c7e9c","webpack:///./src/index.js","webpack:///./src/meiosis-tracer.js","webpack:///./src/model.js","webpack:///./src/view.js","webpack:///./~/json-format/index.js","webpack:///./src/receive.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_meiosisTracer","meiosisTracer","Object","defineProperty","value","undefined","_model","_view","_receive","_ref","selector","renderModel","horizontal","receiveValues","createReceiveValues","tracerModel","tracerView","model","sendValuesBack","window","postMessage","type","initialView","addEventListener","evt","data","values","update","reset","tracerStates","tracerIndex","_interopRequireDefault","obj","__esModule","default","_jsonFormat","_jsonFormat2","jsonFormatConfig","size","tracerContainerId","tracerId","tracerToggleId","tracerResetId","tracerIndexId","tracerModelId","tracerStateId","tracerProposalId","tracer","document","getElementById","setAttribute","String","length","innerHTML","tracerProposalEl","tracerModelEl","tracerStateEl","onSliderChange","index","parseInt","target","snapshot","onModelChange","JSON","parse","err","onToggle","tracerContainer","button","style","display","onReset","querySelector","divStyle","viewHtml","JSONFormat","json","indentType","out","indent","replace","push","i","charAt","tabs","pop","indentConfig","tab","char","space","configDefault","count","Array","join","config","Error","stringify","view"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,cAAAD,IAEAD,EAAA,cAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASL,EAAQD,EAASM,GAE/B,YExDD,IAAAS,GAAAT,EAAA,EAEAL,GAAOD,QAAPe,EAAAC,eF8DM,SAASf,EAAQD,EAASM,GAE/B,YAEAW,QAAOC,eAAelB,EAAS,cAC7BmB,OAAO,IAETnB,EAAQgB,cAAgBI,MGvEzB,IAAAC,GAAAf,EAAA,GACAgB,EAAAhB,EAAA,GACAiB,EAAAjB,EAAA,GAEMU,EAAgB,SAAAQ,GAA2C,GAAxCC,GAAwCD,EAAxCC,SAAUC,EAA8BF,EAA9BE,YAAaC,EAAiBH,EAAjBG,WACxCC,GAAgB,EAAAL,EAAAM,qBAAAR,EAAAS,YAAAR,EAAAS,WActB,OAbAL,GAAcA,GAAgB,SAACM,EAAOC,GACpCC,OAAOC,aAAcC,KAAM,uBAAwBJ,QAAOC,kBAAkB,OAE9E,EAAAX,EAAAe,aAAYZ,EAAZJ,EAAAS,YAAmCJ,EAAaC,GAEhDO,OAAOI,iBAAiB,UAAW,SAAAC,GACX,mBAAlBA,EAAIC,KAAKJ,MACXR,EAAcW,EAAIC,KAAKC,OAAQF,EAAIC,KAAKE,UAI5CR,OAAOC,aAAcC,KAAM,uBAAyB,MAGlDR,gBACAe,MAAO,kBAAM,EAAArB,EAAAqB,OAAAtB,EAAAS,eHqFhB9B,GGjFQgB,iBHqFH,SAASf,EAAQD,GAEtB,YAEAiB,QAAOC,eAAelB,EAAS,cAC7BmB,OAAO,GInHV,IAAMW,IACJc,gBACAC,YAAa,EJwHd7C,GIrHQ8B,eJyHH,SAAS7B,EAAQD,EAASM,GAE/B,YAWA,SAASwC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GATvF9B,OAAOC,eAAelB,EAAS,cAC7BmB,OAAO,IAETnB,EAAQ2C,MAAQ3C,EAAQ+B,WAAa/B,EAAQqC,YAAcjB,MKrI5D,IAAA8B,GAAA5C,EAAA,GLyIK6C,EAAeL,EAAuBI,GKvIrCE,GACJhB,KAAM,QACNiB,KAAM,GAGFC,EAAoB,kBACpBC,EAAW,eACXC,EAAiB,eACjBC,EAAgB,cAChBC,EAAgB,cAChBC,EAAgB,cAChBC,EAAgB,cAChBC,EAAmB,iBAEnB9B,EAAa,SAACU,EAAQX,GAC1B,GAAMgC,GAASC,SAASC,eAAeT,EACvCO,GAAOG,aAAa,MAAOC,OAAOpC,EAAYc,aAAauB,OAAS,IACpEL,EAAO3C,MAAQ+C,OAAOpC,EAAYe,YAElC,IAAMA,GAAckB,SAASC,eAAeN,EAC5Cb,GAAYuB,UAAYF,OAAOpC,EAAYe,YAE3C,IAAMwB,GAAmBN,SAASC,eAAeH,EACjDQ,GAAiBlD,OAAQ,EAAAgC,EAAAF,SAAWR,EAAO,GAAGtB,OAAS,GAAIiC,EAE3D,IAAMkB,GAAgBP,SAASC,eAAeL,EAC9CW,GAAcnD,OAAQ,EAAAgC,EAAAF,SAAWR,EAAO,GAAGtB,MAAOiC,EAElD,IAAMmB,GAAgBR,SAASC,eAAeJ,EAC9CW,GAAcpD,OAAQ,EAAAgC,EAAAF,SAAWR,EAAOA,EAAO0B,OAAS,GAAGhD,MAAOiC,IAG9DoB,EAAiB,SAAC9C,EAAaI,GAAd,MAA8B,UAAAS,GACnD,GAAMkC,GAAQC,SAASnC,EAAIoC,OAAOxD,MAAO,IACnCyD,EAAW9C,EAAYc,aAAa6B,EAC1C3C,GAAYe,YAAc4B,CAC1B,IAAMzC,GAAQ4C,EAAS,GAAGzD,KAC1BO,GAAYM,GAAO,GACnBD,EAAW6C,EAAU9C,KAGjB+C,EAAgB,SAAAnD,GAAA,MAAe,UAAAa,GACnC,IACE,GAAMP,GAAQ8C,KAAKC,MAAMxC,EAAIoC,OAAOxD,MACpCO,GAAYM,GAAO,GAErB,MAAOgD,OAKHC,EAAW,SAAAC,GAAA,MAAmB,UAAA3C,GAClC,GAAM4C,GAAS5C,EAAIoC,MAEmB,UAAlCO,EAAgBE,MAAMC,SACxBH,EAAgBE,MAAMC,QAAU,QAChCF,EAAOf,UAAY,SAGnBc,EAAgBE,MAAMC,QAAU,OAChCF,EAAOf,UAAY,UAIjBkB,EAAU,SAAAxD,GAAA,MAAe,YAC7Ba,EAAMb,KAGFa,EAAQ,SAACb,GACb,GAAM8C,GAAW9C,EAAYc,aAAad,EAAYc,aAAauB,OAAS,EAC5ErC,GAAYc,aAAauB,OAAS,EAClCrC,EAAYc,aAAa,GAAKgC,EAC9B9C,EAAYe,YAAc,EAC1Bd,EAAW6C,EAAU9C,IAGjBO,EAAc,SAACZ,EAAUK,EAAaJ,EAAaC,GACvD,GAAMgD,GAASZ,SAASwB,cAAc9D,EAEtC,IAAIkD,EAAQ,CACV,GAAMa,GAAW7D,EAAa,uBAAyB,GAEjD8D,EAAW,8CAAgDjC,EAAiB,iCAClEF,EAAoB,gDACcG,EAAgB,oCAChDF,EAAW,+BAC3BW,OAAOpC,EAAYc,aAAauB,OAAS,GACzC,YAAcD,OAAOpC,EAAYe,aAAe,mCAClCa,EAAgB,KAAOQ,OAAOpC,EAAYe,aAAe,aAC9D2C,EAAW,sCACD3B,EAAmB,6CAC7B2B,EAAW,gEACD7B,EAAgB,6CAC1B6B,EAAW,mCACD5B,EAAgB,8CAErCe,GAAOP,UAAYqB,CAEnB,IAAMP,GAAkBnB,SAASC,eAAeV,EAEhDS,UAASC,eAAeT,GAAUjB,iBAAiB,QAASkC,EAAe9C,EAAaI,IACxFiC,SAASC,eAAeL,GAAerB,iBAAiB,QAASuC,EAAcnD,IAC/EqC,SAASC,eAAeR,GAAgBlB,iBAAiB,QAAS2C,EAASC,IAC3EnB,SAASC,eAAeP,GAAenB,iBAAiB,QAASgD,EAAQxD,KLyI5E9B,GKrIQqC,cLsIRrC,EKtIqB+B,aLuIrB/B,EKvIiC2C,SL2I5B,SAAS1C,EAAQD,GMlOvB,QAAA0F,GAAAC,EAAAC,GACA9E,IACA,IAAA+E,GAAA,GACAC,EAAA,CAGAH,KACAI,QAAA,OAAAC,GACAD,QAAA,iBAAAC,GACAD,QAAA,SAGA,QAAAE,GAAA,EAAiBA,EAAAN,EAAAxB,OAAiB8B,IAAA,CAClC,GAAApF,GAAA8E,EAAAO,OAAAD,EAEA,QAAApF,GACA,QACA,QACAgF,GAAAhF,EAAA,KAAAsF,IAAAL,EAAAF,EACA,MACA,SACA,QACAC,GAAA,KAAAM,IAAAL,EAAAF,GAAA/E,CACA,MACA,SACAgF,GAAA,MAAAM,EAAAL,EAAAF,EACA,MACA,SACAC,GAAA,IACA,MACA,SACAA,GAAAhF,GAYA,MALAgF,KACAE,QAAA,0BAAAnF,GAA4C,MAAAA,GAAAmF,QAAA,YAC5CA,QAAA,aAAAK,GACAL,QAAA,aAAAK,GArDA,GAAAtF,MACAuF,GACAC,KAAUC,KAAA,KAAAlD,KAAA,GACVmD,OAAYD,KAAA,IAAAlD,KAAA,IAEZoD,GACArE,KAAA,OAEA4D,EAAA,SAAApF,GAAwB,WAAAE,EAAAkF,KAAApF,GAAA,MACxBwF,EAAA,SAAAxF,EAAAqF,GAA0B,MAAAnF,GAAAmF,EAAA,IAC1BE,EAAA,SAAAO,EAAAd,GAAuC,UAAAe,OAAAD,EAAA,GAAAE,KAAAhB,GAgDvC3F,GAAAD,QAAA,SAAA2F,EAAAkB,GACAA,KAAAJ,CACA,IAAAX,GAAAO,EAAAQ,EAAAzE,KAEA,UAAA0D,EACA,SAAAgB,OAAA,6BAAAD,EAAAzE,KAAA,IAEA,IAAAwD,GAAA,GAAAe,QAAAE,EAAAxD,MAAAyC,EAAAzC,MAAA,GAAAuD,KAAAd,EAAAS,KACA,OAAAb,GAAAZ,KAAAiC,UAAApB,GAAAC,KNgQM,SAAS3F,EAAQD,GAEtB,YAEAiB,QAAOC,eAAelB,EAAS,cAC7BmB,OAAO,GOjVV,IAAMU,GAAsB,SAACC,EAAakF,GAAd,MAAuB,UAACvE,EAAQC,GACtDA,IACFZ,EAAYc,aAAaoD,KAAKvD,GAC9BX,EAAYe,YAAcf,EAAYc,aAAauB,OAAS,GAE9D6C,EAAKvE,EAAQX,IPwVd9B,GOrVQ6B","file":"meiosis-tracer.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"meiosisTracer\"] = factory();\n\telse\n\t\troot[\"meiosisTracer\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"meiosisTracer\"] = factory();\n\telse\n\t\troot[\"meiosisTracer\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _meiosisTracer = __webpack_require__(1);\n\t\n\tmodule.exports = _meiosisTracer.meiosisTracer;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.meiosisTracer = undefined;\n\t\n\tvar _model = __webpack_require__(2);\n\t\n\tvar _view = __webpack_require__(3);\n\t\n\tvar _receive = __webpack_require__(5);\n\t\n\tvar meiosisTracer = function meiosisTracer(_ref) {\n\t  var selector = _ref.selector,\n\t      renderModel = _ref.renderModel,\n\t      horizontal = _ref.horizontal;\n\t\n\t  var receiveValues = (0, _receive.createReceiveValues)(_model.tracerModel, _view.tracerView);\n\t  renderModel = renderModel || function (model, sendValuesBack) {\n\t    window.postMessage({ type: \"MEIOSIS_RENDER_MODEL\", model: model, sendValuesBack: sendValuesBack }, \"*\");\n\t  };\n\t  (0, _view.initialView)(selector, _model.tracerModel, renderModel, horizontal);\n\t\n\t  window.addEventListener(\"message\", function (evt) {\n\t    if (evt.data.type === \"MEIOSIS_VALUES\") {\n\t      receiveValues(evt.data.values, evt.data.update);\n\t    }\n\t  });\n\t\n\t  window.postMessage({ type: \"MEIOSIS_TRACER_INIT\" }, \"*\");\n\t\n\t  return {\n\t    receiveValues: receiveValues,\n\t    reset: function reset() {\n\t      return (0, _view.reset)(_model.tracerModel);\n\t    }\n\t  };\n\t};\n\t\n\texports.meiosisTracer = meiosisTracer;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar tracerModel = {\n\t  tracerStates: [],\n\t  tracerIndex: 0\n\t};\n\t\n\texports.tracerModel = tracerModel;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.reset = exports.tracerView = exports.initialView = undefined;\n\t\n\tvar _jsonFormat = __webpack_require__(4);\n\t\n\tvar _jsonFormat2 = _interopRequireDefault(_jsonFormat);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar jsonFormatConfig = {\n\t  type: \"space\",\n\t  size: 2\n\t};\n\t\n\tvar tracerContainerId = \"tracerContainer\";\n\tvar tracerId = \"tracerSlider\";\n\tvar tracerToggleId = \"tracerToggle\";\n\tvar tracerResetId = \"tracerReset\";\n\tvar tracerIndexId = \"tracerIndex\";\n\tvar tracerModelId = \"tracerModel\";\n\tvar tracerStateId = \"tracerState\";\n\tvar tracerProposalId = \"tracerProposal\";\n\t\n\tvar tracerView = function tracerView(values, tracerModel) {\n\t  var tracer = document.getElementById(tracerId);\n\t  tracer.setAttribute(\"max\", String(tracerModel.tracerStates.length - 1));\n\t  tracer.value = String(tracerModel.tracerIndex);\n\t\n\t  var tracerIndex = document.getElementById(tracerIndexId);\n\t  tracerIndex.innerHTML = String(tracerModel.tracerIndex);\n\t\n\t  var tracerProposalEl = document.getElementById(tracerProposalId);\n\t  tracerProposalEl.value = (0, _jsonFormat2.default)(values[0].value || \"\", jsonFormatConfig);\n\t\n\t  var tracerModelEl = document.getElementById(tracerModelId);\n\t  tracerModelEl.value = (0, _jsonFormat2.default)(values[1].value, jsonFormatConfig);\n\t\n\t  var tracerStateEl = document.getElementById(tracerStateId);\n\t  tracerStateEl.value = (0, _jsonFormat2.default)(values[values.length - 1].value, jsonFormatConfig);\n\t};\n\t\n\tvar onSliderChange = function onSliderChange(renderModel, tracerModel) {\n\t  return function (evt) {\n\t    var index = parseInt(evt.target.value, 10);\n\t    var snapshot = tracerModel.tracerStates[index];\n\t    tracerModel.tracerIndex = index;\n\t    var model = snapshot[1].value;\n\t    renderModel(model, false);\n\t    tracerView(snapshot, tracerModel);\n\t  };\n\t};\n\t\n\tvar onModelChange = function onModelChange(renderModel) {\n\t  return function (evt) {\n\t    try {\n\t      var model = JSON.parse(evt.target.value);\n\t      renderModel(model, true);\n\t    } catch (err) {\n\t      // ignore invalid JSON\n\t    }\n\t  };\n\t};\n\t\n\tvar onToggle = function onToggle(tracerContainer) {\n\t  return function (evt) {\n\t    var button = evt.target;\n\t\n\t    if (tracerContainer.style.display === \"none\") {\n\t      tracerContainer.style.display = \"block\";\n\t      button.innerHTML = \"Hide\";\n\t    } else {\n\t      tracerContainer.style.display = \"none\";\n\t      button.innerHTML = \"Show\";\n\t    }\n\t  };\n\t};\n\t\n\tvar onReset = function onReset(tracerModel) {\n\t  return function () {\n\t    reset(tracerModel);\n\t  };\n\t};\n\t\n\tvar reset = function reset(tracerModel) {\n\t  var snapshot = tracerModel.tracerStates[tracerModel.tracerStates.length - 1];\n\t  tracerModel.tracerStates.length = 1;\n\t  tracerModel.tracerStates[0] = snapshot;\n\t  tracerModel.tracerIndex = 0;\n\t  tracerView(snapshot, tracerModel);\n\t};\n\t\n\tvar initialView = function initialView(selector, tracerModel, renderModel, horizontal) {\n\t  var target = document.querySelector(selector);\n\t\n\t  if (target) {\n\t    var divStyle = horizontal ? \" style='float: left'\" : \"\";\n\t\n\t    var viewHtml = \"<div style='text-align: right'><button id='\" + tracerToggleId + \"'>Hide</button></div>\" + \"<div id='\" + tracerContainerId + \"'>\" + \"<div style='text-align: right'><button id='\" + tracerResetId + \"'>Reset</button></div>\" + \"<input id='\" + tracerId + \"' type='range' min='0' max='\" + String(tracerModel.tracerStates.length - 1) + \"' value='\" + String(tracerModel.tracerIndex) + \"' style='width: 100%'/>\" + \"<div id='\" + tracerIndexId + \"'>\" + String(tracerModel.tracerIndex) + \"</div>\" + \"<div\" + divStyle + \"><div>Proposal:</div>\" + \"<textarea id='\" + tracerProposalId + \"' rows='5' cols='40'></textarea></div>\" + \"<div\" + divStyle + \"><div>Model: (you can type into this box)</div>\" + \"<textarea id='\" + tracerModelId + \"' rows='5' cols='40'></textarea></div>\" + \"<div\" + divStyle + \"><div>State:</div>\" + \"<textarea id='\" + tracerStateId + \"' rows='5' cols='40'></textarea></div></div>\";\n\t\n\t    target.innerHTML = viewHtml;\n\t\n\t    var tracerContainer = document.getElementById(tracerContainerId);\n\t\n\t    document.getElementById(tracerId).addEventListener(\"input\", onSliderChange(renderModel, tracerModel));\n\t    document.getElementById(tracerModelId).addEventListener(\"keyup\", onModelChange(renderModel));\n\t    document.getElementById(tracerToggleId).addEventListener(\"click\", onToggle(tracerContainer));\n\t    document.getElementById(tracerResetId).addEventListener(\"click\", onReset(tracerModel));\n\t  }\n\t};\n\t\n\texports.initialView = initialView;\n\texports.tracerView = tracerView;\n\texports.reset = reset;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/*\n\t  change for npm modules.\n\t  by Luiz Estácio.\n\t\n\t  json-format v.1.1\n\t  http://github.com/phoboslab/json-format\n\t\n\t  Released under MIT license:\n\t  http://www.opensource.org/licenses/mit-license.php\n\t*/\n\tvar p = [],\n\t  indentConfig = {\n\t    tab: { char: '\\t', size: 1 },\n\t    space: { char: ' ', size: 4 }\n\t  },\n\t  configDefault = {\n\t    type: 'tab'\n\t  },\n\t  push = function( m ) { return '\\\\' + p.push( m ) + '\\\\'; },\n\t  pop = function( m, i ) { return p[i-1] },\n\t  tabs = function( count, indentType) { return new Array( count + 1 ).join( indentType ); };\n\t\n\tfunction JSONFormat ( json, indentType ) {\n\t  p = [];\n\t  var out = \"\",\n\t      indent = 0;\n\t\n\t  // Extract backslashes and strings\n\t  json = json\n\t    .replace( /\\\\./g, push )\n\t    .replace( /(\".*?\"|'.*?')/g, push )\n\t    .replace( /\\s+/, '' );    \n\t\n\t  // Indent and insert newlines\n\t  for( var i = 0; i < json.length; i++ ) {\n\t    var c = json.charAt(i);\n\t\n\t    switch(c) {\n\t      case '{':\n\t      case '[':\n\t        out += c + \"\\n\" + tabs(++indent, indentType);\n\t        break;\n\t      case '}':\n\t      case ']':\n\t        out += \"\\n\" + tabs(--indent, indentType) + c;\n\t        break;\n\t      case ',':\n\t        out += \",\\n\" + tabs(indent, indentType);\n\t        break;\n\t      case ':':\n\t        out += \": \";\n\t        break;\n\t      default:\n\t        out += c;\n\t        break;      \n\t    }         \n\t  }\n\t\n\t  // Strip whitespace from numeric arrays and put backslashes \n\t  // and strings back in\n\t  out = out\n\t    .replace( /\\[[\\d,\\s]+?\\]/g, function(m){ return m.replace(/\\s/g,''); } )\n\t    .replace( /\\\\(\\d+)\\\\/g, pop ) // strings\n\t    .replace( /\\\\(\\d+)\\\\/g, pop ); // backslashes in strings\n\t\n\t  return out;\n\t};\n\t\n\tmodule.exports = function(json, config){\n\t  config = config || configDefault;\n\t  var indent = indentConfig[config.type];\n\t\n\t  if ( indent == null ) {\n\t    throw new Error('Unrecognized ident type: \"' + config.type + '\"');\n\t  }\n\t  var indentType = new Array((config.size || indent.size) + 1).join(indent.char);\n\t  return JSONFormat(JSON.stringify(json), indentType);\n\t}\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar createReceiveValues = function createReceiveValues(tracerModel, view) {\n\t  return function (values, update) {\n\t    if (update) {\n\t      tracerModel.tracerStates.push(values);\n\t      tracerModel.tracerIndex = tracerModel.tracerStates.length - 1;\n\t    }\n\t    view(values, tracerModel);\n\t  };\n\t};\n\t\n\texports.createReceiveValues = createReceiveValues;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// meiosis-tracer.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7517db2e7c36117c7e9c","import { meiosisTracer } from \"./meiosis-tracer\";\n\nmodule.exports = meiosisTracer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import { tracerModel } from \"./model\";\nimport { initialView, tracerView, reset } from \"./view\";\nimport { createReceiveValues } from \"./receive\";\n\nconst meiosisTracer = ({ selector, renderModel, horizontal }) => {\n  const receiveValues = createReceiveValues(tracerModel, tracerView);\n  renderModel = renderModel || ((model, sendValuesBack) => {\n    window.postMessage({ type: \"MEIOSIS_RENDER_MODEL\", model, sendValuesBack }, \"*\");\n  });\n  initialView(selector, tracerModel, renderModel, horizontal);\n\n  window.addEventListener(\"message\", evt => {\n    if (evt.data.type === \"MEIOSIS_VALUES\") {\n      receiveValues(evt.data.values, evt.data.update);\n    }\n  });\n\n  window.postMessage({ type: \"MEIOSIS_TRACER_INIT\" }, \"*\");\n\n  return {\n    receiveValues,\n    reset: () => reset(tracerModel)\n  };\n};\n\nexport { meiosisTracer };\n\n\n\n// WEBPACK FOOTER //\n// ./src/meiosis-tracer.js","const tracerModel = {\n  tracerStates: [],\n  tracerIndex: 0\n};\n\nexport { tracerModel };\n\n\n\n// WEBPACK FOOTER //\n// ./src/model.js","import jsonFormat from \"json-format\";\n\nconst jsonFormatConfig = {\n  type: \"space\",\n  size: 2\n};\n\nconst tracerContainerId = \"tracerContainer\";\nconst tracerId = \"tracerSlider\";\nconst tracerToggleId = \"tracerToggle\";\nconst tracerResetId = \"tracerReset\";\nconst tracerIndexId = \"tracerIndex\";\nconst tracerModelId = \"tracerModel\";\nconst tracerStateId = \"tracerState\";\nconst tracerProposalId = \"tracerProposal\";\n\nconst tracerView = (values, tracerModel) => {\n  const tracer = document.getElementById(tracerId);\n  tracer.setAttribute(\"max\", String(tracerModel.tracerStates.length - 1));\n  tracer.value = String(tracerModel.tracerIndex);\n\n  const tracerIndex = document.getElementById(tracerIndexId);\n  tracerIndex.innerHTML = String(tracerModel.tracerIndex);\n\n  const tracerProposalEl = document.getElementById(tracerProposalId);\n  tracerProposalEl.value = jsonFormat(values[0].value || \"\", jsonFormatConfig);\n\n  const tracerModelEl = document.getElementById(tracerModelId);\n  tracerModelEl.value = jsonFormat(values[1].value, jsonFormatConfig);\n\n  const tracerStateEl = document.getElementById(tracerStateId);\n  tracerStateEl.value = jsonFormat(values[values.length - 1].value, jsonFormatConfig);\n};\n\nconst onSliderChange = (renderModel, tracerModel) => evt => {\n  const index = parseInt(evt.target.value, 10);\n  const snapshot = tracerModel.tracerStates[index];\n  tracerModel.tracerIndex = index;\n  const model = snapshot[1].value;\n  renderModel(model, false);\n  tracerView(snapshot, tracerModel);\n};\n\nconst onModelChange = renderModel => evt => {\n  try {\n    const model = JSON.parse(evt.target.value);\n    renderModel(model, true);\n  }\n  catch (err) {\n    // ignore invalid JSON\n  }\n};\n\nconst onToggle = tracerContainer => evt => {\n  const button = evt.target;\n\n  if (tracerContainer.style.display === \"none\") {\n    tracerContainer.style.display = \"block\";\n    button.innerHTML = \"Hide\";\n  }\n  else {\n    tracerContainer.style.display = \"none\";\n    button.innerHTML = \"Show\";\n  }\n};\n\nconst onReset = tracerModel => () => {\n  reset(tracerModel);\n};\n\nconst reset = (tracerModel) => {\n  const snapshot = tracerModel.tracerStates[tracerModel.tracerStates.length - 1];\n  tracerModel.tracerStates.length = 1;\n  tracerModel.tracerStates[0] = snapshot;\n  tracerModel.tracerIndex = 0;\n  tracerView(snapshot, tracerModel);\n};\n\nconst initialView = (selector, tracerModel, renderModel, horizontal) => {\n  const target = document.querySelector(selector);\n\n  if (target) {\n    const divStyle = horizontal ? \" style='float: left'\" : \"\";\n\n    const viewHtml = \"<div style='text-align: right'><button id='\" + tracerToggleId + \"'>Hide</button></div>\" +\n      \"<div id='\" + tracerContainerId + \"'>\" +\n      \"<div style='text-align: right'><button id='\" + tracerResetId + \"'>Reset</button></div>\" +\n      \"<input id='\" + tracerId + \"' type='range' min='0' max='\" +\n      String(tracerModel.tracerStates.length - 1) +\n      \"' value='\" + String(tracerModel.tracerIndex) + \"' style='width: 100%'/>\" +\n      \"<div id='\" + tracerIndexId + \"'>\" + String(tracerModel.tracerIndex) + \"</div>\" +\n      \"<div\" + divStyle + \"><div>Proposal:</div>\" +\n      \"<textarea id='\" + tracerProposalId + \"' rows='5' cols='40'></textarea></div>\" +\n      \"<div\" + divStyle + \"><div>Model: (you can type into this box)</div>\" +\n      \"<textarea id='\" + tracerModelId + \"' rows='5' cols='40'></textarea></div>\" +\n      \"<div\" + divStyle + \"><div>State:</div>\" +\n      \"<textarea id='\" + tracerStateId + \"' rows='5' cols='40'></textarea></div></div>\";\n\n    target.innerHTML = viewHtml;\n\n    const tracerContainer = document.getElementById(tracerContainerId);\n\n    document.getElementById(tracerId).addEventListener(\"input\", onSliderChange(renderModel, tracerModel));\n    document.getElementById(tracerModelId).addEventListener(\"keyup\", onModelChange(renderModel));\n    document.getElementById(tracerToggleId).addEventListener(\"click\", onToggle(tracerContainer));\n    document.getElementById(tracerResetId).addEventListener(\"click\", onReset(tracerModel));\n  }\n};\n\nexport { initialView, tracerView, reset };\n\n\n\n// WEBPACK FOOTER //\n// ./src/view.js","/*\n  change for npm modules.\n  by Luiz Estácio.\n\n  json-format v.1.1\n  http://github.com/phoboslab/json-format\n\n  Released under MIT license:\n  http://www.opensource.org/licenses/mit-license.php\n*/\nvar p = [],\n  indentConfig = {\n    tab: { char: '\\t', size: 1 },\n    space: { char: ' ', size: 4 }\n  },\n  configDefault = {\n    type: 'tab'\n  },\n  push = function( m ) { return '\\\\' + p.push( m ) + '\\\\'; },\n  pop = function( m, i ) { return p[i-1] },\n  tabs = function( count, indentType) { return new Array( count + 1 ).join( indentType ); };\n\nfunction JSONFormat ( json, indentType ) {\n  p = [];\n  var out = \"\",\n      indent = 0;\n\n  // Extract backslashes and strings\n  json = json\n    .replace( /\\\\./g, push )\n    .replace( /(\".*?\"|'.*?')/g, push )\n    .replace( /\\s+/, '' );    \n\n  // Indent and insert newlines\n  for( var i = 0; i < json.length; i++ ) {\n    var c = json.charAt(i);\n\n    switch(c) {\n      case '{':\n      case '[':\n        out += c + \"\\n\" + tabs(++indent, indentType);\n        break;\n      case '}':\n      case ']':\n        out += \"\\n\" + tabs(--indent, indentType) + c;\n        break;\n      case ',':\n        out += \",\\n\" + tabs(indent, indentType);\n        break;\n      case ':':\n        out += \": \";\n        break;\n      default:\n        out += c;\n        break;      \n    }         \n  }\n\n  // Strip whitespace from numeric arrays and put backslashes \n  // and strings back in\n  out = out\n    .replace( /\\[[\\d,\\s]+?\\]/g, function(m){ return m.replace(/\\s/g,''); } )\n    .replace( /\\\\(\\d+)\\\\/g, pop ) // strings\n    .replace( /\\\\(\\d+)\\\\/g, pop ); // backslashes in strings\n\n  return out;\n};\n\nmodule.exports = function(json, config){\n  config = config || configDefault;\n  var indent = indentConfig[config.type];\n\n  if ( indent == null ) {\n    throw new Error('Unrecognized ident type: \"' + config.type + '\"');\n  }\n  var indentType = new Array((config.size || indent.size) + 1).join(indent.char);\n  return JSONFormat(JSON.stringify(json), indentType);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-format/index.js\n// module id = 4\n// module chunks = 0","const createReceiveValues = (tracerModel, view) => (values, update) => {\n  if (update) {\n    tracerModel.tracerStates.push(values);\n    tracerModel.tracerIndex = tracerModel.tracerStates.length - 1;\n  }\n  view(values, tracerModel);\n};\n\nexport { createReceiveValues };\n\n\n\n// WEBPACK FOOTER //\n// ./src/receive.js"],"sourceRoot":""}