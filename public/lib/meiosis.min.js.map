{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///meiosis.min.js","webpack:///webpack/bootstrap 22e1acaf3ed2f474e67b","webpack:///./src/index.ts","webpack:///./src/meiosis.ts","webpack:///./src/merge.ts","webpack:///./src/wire.ts"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__export","hasOwnProperty","init","adapters","allReceiveUpdates","allViewModels","allReadies","allPostRenders","allNextUpdates","createRootWire","rootWire","wire_1","defaultWireCreator","createComponentWire","componentWire","sendUpdate","emit","sendUpdateActions","merge","merge_1","defaultMerge","rootModel","createComponent","config","actions","nextUpdate","initialModel","ready","receiveUpdate","view","Error","push","viewModel","postRender","model","update","undefined","runAllViewModels","forEach","run","length","listen","accepted","i","receivedUpdate","REFUSE_UPDATE","renderRoot","rootView","render","meiosisInstance","target","sources","_i","arguments","TypeError","output","Object","index","source","nextKey","wires","nextWireId","createWire","listener","lstnr","wireName","name","theWire"],"mappings":"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","file":"meiosis.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"meiosis\"] = factory();\n\telse\n\t\troot[\"meiosis\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"meiosis\"] = factory();\n\telse\n\t\troot[\"meiosis\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t__export(__webpack_require__(1));\n\t__export(__webpack_require__(2));\n\t__export(__webpack_require__(3));\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar merge_1 = __webpack_require__(2);\n\tvar wire_1 = __webpack_require__(3);\n\tvar REFUSE_UPDATE = {};\n\texports.REFUSE_UPDATE = REFUSE_UPDATE;\n\tfunction init(adapters) {\n\t    var allReceiveUpdates = [];\n\t    var allViewModels = [];\n\t    var allReadies = [];\n\t    var allPostRenders = [];\n\t    var allNextUpdates = [];\n\t    var createRootWire = adapters.rootWire || wire_1.defaultWireCreator();\n\t    var createComponentWire = adapters.componentWire || wire_1.defaultWireCreator();\n\t    var rootWire = createRootWire(\"meiosis\");\n\t    var componentWire = createComponentWire();\n\t    var sendUpdate = componentWire.emit;\n\t    var sendUpdateActions = { sendUpdate: sendUpdate };\n\t    var merge = adapters.merge || merge_1.defaultMerge;\n\t    var rootModel = null;\n\t    var createComponent = function (config) {\n\t        if (!config || (!config.actions &&\n\t            !config.nextUpdate &&\n\t            !config.initialModel &&\n\t            !config.ready &&\n\t            !config.receiveUpdate &&\n\t            !config.view)) {\n\t            throw new Error(\"Please specify a config when calling createComponent.\");\n\t        }\n\t        var initialModel = config.initialModel || {};\n\t        rootModel = (rootModel === null) ? initialModel : merge(rootModel, initialModel);\n\t        var actions = config.actions ? merge(sendUpdateActions, config.actions(sendUpdate)) : sendUpdateActions;\n\t        var receiveUpdate = config.receiveUpdate;\n\t        if (receiveUpdate) {\n\t            allReceiveUpdates.push(receiveUpdate);\n\t        }\n\t        var viewModel = config.viewModel;\n\t        if (viewModel) {\n\t            allViewModels.push(viewModel);\n\t        }\n\t        var ready = config.ready;\n\t        if (ready) {\n\t            allReadies.push(function () { return ready(actions); });\n\t        }\n\t        var postRender = config.postRender;\n\t        if (postRender) {\n\t            allPostRenders.push(postRender);\n\t        }\n\t        var nextUpdate = config.nextUpdate;\n\t        if (nextUpdate) {\n\t            allNextUpdates.push(function (model, update) { return nextUpdate(model, update, actions); });\n\t        }\n\t        return function (model) {\n\t            return config.view && config.view(model, actions) || undefined;\n\t        };\n\t    };\n\t    var runAllViewModels = function () {\n\t        allViewModels.forEach(function (viewModel) {\n\t            rootModel = viewModel(rootModel);\n\t        });\n\t    };\n\t    var run = function (root) {\n\t        if (allReceiveUpdates.length === 0) {\n\t            allReceiveUpdates.push(merge);\n\t        }\n\t        componentWire.listen(function (update) {\n\t            var accepted = true;\n\t            for (var i = 0; i < allReceiveUpdates.length; i++) {\n\t                var receiveUpdate = allReceiveUpdates[i];\n\t                var receivedUpdate = receiveUpdate(rootModel, update);\n\t                if (receivedUpdate === REFUSE_UPDATE) {\n\t                    accepted = false;\n\t                    break;\n\t                }\n\t                else {\n\t                    rootModel = receivedUpdate;\n\t                }\n\t            }\n\t            ;\n\t            if (accepted) {\n\t                runAllViewModels();\n\t                rootWire.emit(rootModel);\n\t                allNextUpdates.forEach(function (nextUpdate) { return nextUpdate(rootModel, update); });\n\t            }\n\t        });\n\t        var renderRoot = function (model) {\n\t            var rootView = root(model);\n\t            adapters.render(rootView);\n\t            allPostRenders.forEach(function (postRender) { return postRender(rootView); });\n\t        };\n\t        rootWire.listen(renderRoot);\n\t        runAllViewModels();\n\t        rootWire.emit(rootModel);\n\t        allReadies.forEach(function (ready) { return ready(); });\n\t        return renderRoot;\n\t    };\n\t    var meiosisInstance = {\n\t        createComponent: createComponent,\n\t        run: run\n\t    };\n\t    return meiosisInstance;\n\t}\n\texports.init = init;\n\t;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar defaultMerge = function (target) {\n\t    var sources = [];\n\t    for (var _i = 1; _i < arguments.length; _i++) {\n\t        sources[_i - 1] = arguments[_i];\n\t    }\n\t    if (target === undefined || target === null) {\n\t        throw new TypeError(\"Cannot convert undefined or null to object\");\n\t    }\n\t    var output = Object(target);\n\t    for (var index = 1; index < arguments.length; index++) {\n\t        var source = arguments[index];\n\t        if (source !== undefined && source !== null) {\n\t            for (var nextKey in source) {\n\t                if (source.hasOwnProperty(nextKey)) {\n\t                    output[nextKey] = source[nextKey];\n\t                }\n\t            }\n\t        }\n\t    }\n\t    return output;\n\t};\n\texports.defaultMerge = defaultMerge;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tfunction defaultWireCreator() {\n\t    var wires = {};\n\t    var nextWireId = 1;\n\t    var createWire = function () {\n\t        var listener = null;\n\t        var listen = function (lstnr) { return listener = lstnr; };\n\t        var emit = function (update) { return listener(update); };\n\t        return { emit: emit, listen: listen };\n\t    };\n\t    return function (wireName) {\n\t        var name = wireName;\n\t        if (!name) {\n\t            name = \"wire_\" + nextWireId;\n\t            nextWireId++;\n\t        }\n\t        var theWire = wires[name];\n\t        if (!theWire) {\n\t            theWire = createWire();\n\t            wires[name] = theWire;\n\t        }\n\t        return theWire;\n\t    };\n\t}\n\texports.defaultWireCreator = defaultWireCreator;\n\t;\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** meiosis.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 22e1acaf3ed2f474e67b\n **/","export * from \"./meiosis\";\nexport * from \"./adapters\";\nexport * from \"./config\";\nexport * from \"./merge\";\nexport * from \"./nextUpdate\";\nexport * from \"./postRender\";\nexport * from \"./ready\";\nexport * from \"./receiveUpdate\";\nexport * from \"./renderer\";\nexport * from \"./view\";\nexport * from \"./wire\";\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.ts\n **/","import { Adapters } from \"./adapters\";\nimport { Config } from \"./config\";\nimport { Merger, defaultMerge } from \"./merge\";\nimport { NextUpdate, NextUpdateFromActions } from \"./nextUpdate\";\nimport { PostRender } from \"./postRender\";\nimport { Ready } from \"./ready\";\nimport { ReceiveUpdate } from \"./receiveUpdate\";\nimport { ViewModel } from \"./viewModel\";\nimport { Emitter, Listener, WireCreator, Wire, defaultWireCreator } from \"./wire\";\n\nexport interface Component<M, V> {\n  (model: M): V;\n}\n\nexport interface CreateComponent<M, V, U> {\n  (config: Config<M, V, U>): Component<M, V>;\n}\n\nexport interface RenderRoot<M> {\n  (model: M): void;\n}\n\nexport interface Run<M, V> {\n  (component: Component<M, V>): RenderRoot<M>;\n}\n\nexport interface Meiosis<M, V, U> {\n  createComponent: CreateComponent<M, V, U>;\n  run: Run<M, V>;\n}\n\nconst REFUSE_UPDATE = {};\n\nfunction init<M, V, U>(adapters: Adapters<M, V, U>): Meiosis<M, V, U> {\n  let allReceiveUpdates: Array<ReceiveUpdate<M, U>> = [];\n  let allViewModels: Array<ViewModel<M>> = [];\n  let allReadies: Array<Ready<U>> = [];\n  let allPostRenders: Array<PostRender<V>> = [];\n  let allNextUpdates: Array<NextUpdateFromActions<M, U>> = [];\n\n  const createRootWire: WireCreator<M> = adapters.rootWire || defaultWireCreator();\n  const createComponentWire: WireCreator<U> = adapters.componentWire || defaultWireCreator();\n  const rootWire: Wire<M> = createRootWire(\"meiosis\");\n  const componentWire: Wire<U> = createComponentWire();\n  const sendUpdate: Emitter<U> = componentWire.emit;\n  const sendUpdateActions = {sendUpdate};\n\n  const merge: Merger = adapters.merge || defaultMerge;\n\n  let rootModel: M = null;\n\n  const createComponent: CreateComponent<M, V, U> = (config: Config<M, V, U>) => {\n    if (!config || (\n      !config.actions &&\n      !config.nextUpdate &&\n      !config.initialModel &&\n      !config.ready &&\n      !config.receiveUpdate &&\n      !config.view\n    )) {\n      throw new Error(\"Please specify a config when calling createComponent.\");\n    }\n    const initialModel: any = config.initialModel || {};\n    rootModel = (rootModel === null) ? initialModel : merge(rootModel, initialModel);\n\n    const actions = config.actions ? merge(sendUpdateActions, config.actions(sendUpdate)) : sendUpdateActions;\n\n    const receiveUpdate: ReceiveUpdate<M, U> = config.receiveUpdate;\n    if (receiveUpdate) {\n      allReceiveUpdates.push(receiveUpdate);\n    }\n\n    const viewModel: ViewModel<M> = config.viewModel;\n    if (viewModel) {\n      allViewModels.push(viewModel);\n    }\n\n    const ready: Ready<U> = config.ready;\n    if (ready) {\n      allReadies.push(() => ready(actions));\n    }\n\n    const postRender: PostRender<V> = config.postRender;\n    if (postRender) {\n      allPostRenders.push(postRender);\n    }\n\n    const nextUpdate: NextUpdate<M, U> = config.nextUpdate;\n    if (nextUpdate) {\n      allNextUpdates.push((model: M, update: U) => nextUpdate(model, update, actions));\n    }\n\n    return function(model: M): V {\n      return config.view && config.view(model, actions) || undefined;\n    };\n  };\n\n  const runAllViewModels = () => {\n    allViewModels.forEach((viewModel: ViewModel<M>) => {\n      rootModel = viewModel(rootModel);\n    });\n  };\n\n  const run: Run<M, V> = (root: Component<M, V>) => {\n    if (allReceiveUpdates.length === 0) {\n      allReceiveUpdates.push(merge);\n    }\n\n    componentWire.listen((update: any) => {\n      let accepted = true;\n\n      for (let i: number = 0; i < allReceiveUpdates.length; i++) {\n        const receiveUpdate: ReceiveUpdate<M, U> = allReceiveUpdates[i];\n        const receivedUpdate: M = receiveUpdate(rootModel, update);\n\n        if (receivedUpdate === REFUSE_UPDATE) {\n          accepted = false;\n          break;\n        }\n        else {\n          rootModel = receivedUpdate;\n        }\n      };\n\n      if (accepted) {\n        runAllViewModels();\n        rootWire.emit(rootModel);\n        allNextUpdates.forEach((nextUpdate: NextUpdateFromActions<M, U>) => nextUpdate(rootModel, update));\n      }\n    });\n\n    const renderRoot: RenderRoot<M> = (model: M) => {\n      const rootView: V = root(model);\n      adapters.render(rootView);\n      allPostRenders.forEach((postRender: PostRender<V>) => postRender(rootView));\n    };\n    rootWire.listen(renderRoot);\n\n    runAllViewModels();\n    rootWire.emit(rootModel);\n    allReadies.forEach((ready: Function) => ready());\n\n    return renderRoot;\n  };\n\n  const meiosisInstance: Meiosis<M, V, U> = {\n    createComponent,\n    run\n  };\n\n  return meiosisInstance;\n};\n\nexport {\n  init,\n  REFUSE_UPDATE\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/meiosis.ts\n **/","interface Merger {\n  (target: any, ...sources: Array<any>): any;\n}\n\nconst defaultMerge: Merger = function(target: any, ...sources: Array<any>) {\n  if (target === undefined || target === null) {\n    throw new TypeError(\"Cannot convert undefined or null to object\");\n  }\n\n  let output = Object(target);\n  for (let index = 1; index < arguments.length; index++) {\n    const source = arguments[index];\n    if (source !== undefined && source !== null) {\n      for (let nextKey in source) {\n        if (source.hasOwnProperty(nextKey)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n  }\n  return output;\n};\n\nexport { Merger, defaultMerge };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/merge.ts\n **/","interface Listener<U> {\n  (update: U): void;\n}\n\ninterface Emitter<U> {\n  (update: U): void;\n}\n\ninterface Wire<U> {\n  emit: Emitter<U>;\n  listen(listener: Listener<U>): any;\n}\n\ninterface WireCreator<U> {\n  (wireName?: string): Wire<U>;\n}\n\nfunction defaultWireCreator<U>(): WireCreator<U> {\n  let wires = {};\n  let nextWireId = 1;\n\n  const createWire = function(): Wire<U> {\n    let listener: Listener<U> = null;\n    const listen = (lstnr: Listener<U>) => listener = lstnr;\n    const emit = (update: U) => listener(update);\n\n    return { emit, listen };\n  };\n\n  return function(wireName: string) {\n    let name = wireName;\n\n    if (!name) {\n      name = \"wire_\" + nextWireId;\n      nextWireId++;\n    }\n\n    let theWire: Wire<U> = wires[name];\n\n    if (!theWire) {\n      theWire = createWire();\n      wires[name] = theWire;\n    }\n\n    return theWire;\n  };\n};\n\nexport { Emitter, Listener, Wire, WireCreator, defaultWireCreator };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/wire.ts\n **/"],"sourceRoot":""}