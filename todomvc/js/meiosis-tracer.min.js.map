{"version":3,"sources":["webpack:///meiosis-tracer.min.js","webpack:///webpack/bootstrap 34f4f2c1f01af719c33c","webpack:///./src/index.js","webpack:///./src/meiosis-tracer.js","webpack:///./src/model.js","webpack:///./src/view.js","webpack:///./src/receiveUpdate.js"],"names":["meiosisTracer","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_meiosisTracer","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","undefined","_model","_view","_receiveUpdate","_receiveUpdate2","tracerModel","initialModel","createComponent","renderRoot","selector","receiveUpdate","updateView","initialView","tracerStates","tracerIndex","tracerId","tracerIndexId","tracerModelId","tracerUpdateId","_ref","model","update","tracer","document","getElementById","setAttribute","String","length","console","log","innerHTML","tracerModelEl","JSON","stringify","tracerUpdateEl","onSliderChange","evt","index","parseInt","target","snapshot","onModelChange","parse","err","querySelector","viewHtml","addEventListener","view","modelCopy","modelAndUpdate","push"],"mappings":"AAAA,GAAIA,eACK,SAAUC,GCGnB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDOM,SAASI,EAAQD,EAASH,GAE/B,YE/CD,IAAAW,GAAAX,EAAA,EAEAI,GAAOD,QAAPQ,EAAAb,eFqDM,SAASM,EAAQD,EAASH,GAE/B,YAeA,SAASY,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAbvFG,OAAOC,eAAed,EAAS,cAC7Be,OAAO,IAETf,EAAQL,cAAgBqB,MG9DzB,IAAAC,GAAApB,EAAA,GACAqB,EAAArB,EAAA,GACAsB,EAAAtB,EAAA,GHoEKuB,EAAkBX,EAAuBU,GGlExCE,EAAAJ,EAAAK,aAEA3B,EAAgB,SAAC4B,EAAiBC,EAAYC,GAClDF,GACEG,eAAe,EAAAN,cAAcC,EAAdH,EAAAS,eAEjB,EAAAT,EAAAU,aAAYH,EAAUD,EAAYH,GHyEnCrB,GGtEQL,iBH0EH,SAASM,EAAQD,GAEtB,YAEAa,QAAOC,eAAed,EAAS,cAC7Be,OAAO,GI5FV,IAAMO,IACJO,gBACAC,YAAa,EJiGd9B,GI9FQsB,gBJkGH,SAASrB,EAAQD,GAEtB,YAEAa,QAAOC,eAAed,EAAS,cAC7Be,OAAO,GK5GV,IAAMgB,GAAW,eACXC,EAAgB,cAChBC,EAAgB,cAChBC,EAAiB,eAEjBP,EAAa,SAAAQ,EAAkBd,GAAgB,GAAhCe,GAAgCD,EAAhCC,MAAOC,EAAyBF,EAAzBE,OACpBC,EAASC,SAASC,eAAeT,EACvCO,GAAOG,aAAa,MAAOC,OAAOrB,EAAYQ,aAAac,OAAS,IACpEL,EAAOvB,MAAQ2B,OAAOrB,EAAYS,aAClCc,QAAQC,IAAI,qBAAsBxB,EAAYS,YAAa,OAAQT,EAAYQ,aAAac,OAAS,EAErG,IAAMb,GAAcS,SAASC,eAAeR,EAC5CF,GAAYgB,UAAYJ,OAAOrB,EAAYS,YAE3C,IAAMiB,GAAgBR,SAASC,eAAeP,EAC9Cc,GAAcD,UAAYE,KAAKC,UAAUb,EAEzC,IAAMc,GAAiBX,SAASC,eAAeN,EAC/CgB,GAAeJ,UAAYE,KAAKC,UAAUZ,GAC1CO,QAAQC,IAAI,iBAGRM,EAAiB,SAAC3B,EAAYH,GAAb,MAA6B,UAAA+B,GAClD,GAAMC,GAAQC,SAASF,EAAIG,OAAOxC,MAAO,GACzC6B,SAAQC,IAAI,kBAAmBQ,EAC/B,IAAMG,GAAWnC,EAAYQ,aAAawB,EAC1CT,SAAQC,IAAI,YAAaW,EAASpB,OAClCZ,EAAWgC,EAASpB,OACpBf,EAAYS,YAAcuB,EAC1B1B,EAAW6B,EAAUnC,GACrBuB,QAAQC,IAAI,sBAGRY,EAAgB,SAAAjC,GAAA,MAAc,UAAA4B,GAClC,IACE,GAAMhB,GAAQY,KAAKU,MAAMN,EAAIG,OAAOxC,MACpCS,GAAWY,GAEb,MAAOuB,OAKH/B,EAAc,SAACH,EAAUD,EAAYH,GACzC,GAAMkC,GAAShB,SAASqB,cAAcnC,EAEtC,IAAI8B,EAAQ,CACV,GAAMM,GAAW,mBAAqB9B,EAAW,+BAC/CW,OAAOrB,EAAYQ,aAAac,OAAS,GACzC,YAAcD,OAAOrB,EAAYS,aAAe,mCAClCE,EAAgB,KAAOU,OAAOrB,EAAYS,aAAe,uBACpDI,EAAiB,wEACjBD,EAAgB,+DAErCsB,GAAOT,UAAYe,EACnBtB,SAASC,eAAeT,GAAU+B,iBAAiB,QAASX,EAAe3B,EAAYH,IACvFkB,SAASC,eAAeP,GAAe6B,iBAAiB,QAASL,EAAcjC,KLmHlFxB,GK/GQ4B,cLgHR5B,EKhHqB2B,cLoHhB,SAAS1B,EAAQD,GAEtB,YAEAa,QAAOC,eAAed,EAAS,cAC7Be,OAAO,GMrLV,IAAMW,GAAgB,SAACL,EAAa0C,GAAd,MAAuB,UAAC3B,EAAOC,GACnDO,QAAQC,IAAI,iBAAkBT,EAAOC,EACrC,IAAM2B,GAAYhB,KAAKU,MAAMV,KAAKC,UAAUb,IACtC6B,GAAmB7B,MAAO4B,EAAW3B,SAQ3C,OAPAhB,GAAYQ,aAAaqC,KAAKD,GAC9B5C,EAAYS,YAAcT,EAAYQ,aAAac,OAAS,EAC5DC,QAAQC,IAAI,eAAgBxB,EAAYS,aACxCc,QAAQC,IAAI,mBAEZkB,EAAKE,EAAgB5C,GAEde,GN4LRpC,cMzLc0B","file":"meiosis-tracer.min.js","sourcesContent":["var meiosisTracer =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _meiosisTracer = __webpack_require__(1);\n\t\n\tmodule.exports = _meiosisTracer.meiosisTracer;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.meiosisTracer = undefined;\n\t\n\tvar _model = __webpack_require__(2);\n\t\n\tvar _view = __webpack_require__(3);\n\t\n\tvar _receiveUpdate = __webpack_require__(4);\n\t\n\tvar _receiveUpdate2 = _interopRequireDefault(_receiveUpdate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar tracerModel = _model.initialModel;\n\t\n\tvar meiosisTracer = function meiosisTracer(createComponent, renderRoot, selector) {\n\t  createComponent({\n\t    receiveUpdate: (0, _receiveUpdate2.default)(tracerModel, _view.updateView)\n\t  });\n\t  (0, _view.initialView)(selector, renderRoot, tracerModel);\n\t};\n\t\n\texports.meiosisTracer = meiosisTracer;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar initialModel = {\n\t  tracerStates: [],\n\t  tracerIndex: 0\n\t};\n\t\n\texports.initialModel = initialModel;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar tracerId = \"tracerSlider\";\n\tvar tracerIndexId = \"tracerIndex\";\n\tvar tracerModelId = \"tracerModel\";\n\tvar tracerUpdateId = \"tracerUpdate\";\n\t\n\tvar updateView = function updateView(_ref, tracerModel) {\n\t  var model = _ref.model;\n\t  var update = _ref.update;\n\t\n\t  var tracer = document.getElementById(tracerId);\n\t  tracer.setAttribute(\"max\", String(tracerModel.tracerStates.length - 1));\n\t  tracer.value = String(tracerModel.tracerIndex);\n\t  console.log(\"updateView: index=\", tracerModel.tracerIndex, \"max=\", tracerModel.tracerStates.length - 1);\n\t\n\t  var tracerIndex = document.getElementById(tracerIndexId);\n\t  tracerIndex.innerHTML = String(tracerModel.tracerIndex);\n\t\n\t  var tracerModelEl = document.getElementById(tracerModelId);\n\t  tracerModelEl.innerHTML = JSON.stringify(model);\n\t\n\t  var tracerUpdateEl = document.getElementById(tracerUpdateId);\n\t  tracerUpdateEl.innerHTML = JSON.stringify(update);\n\t  console.log(\"--updateView\");\n\t};\n\t\n\tvar onSliderChange = function onSliderChange(renderRoot, tracerModel) {\n\t  return function (evt) {\n\t    var index = parseInt(evt.target.value, 10);\n\t    console.log(\"onSliderChange:\", index);\n\t    var snapshot = tracerModel.tracerStates[index];\n\t    console.log(\"snapshot:\", snapshot.model);\n\t    renderRoot(snapshot.model);\n\t    tracerModel.tracerIndex = index;\n\t    updateView(snapshot, tracerModel);\n\t    console.log(\"--onSliderChange\");\n\t  };\n\t};\n\t\n\tvar onModelChange = function onModelChange(renderRoot) {\n\t  return function (evt) {\n\t    try {\n\t      var model = JSON.parse(evt.target.value);\n\t      renderRoot(model);\n\t    } catch (err) {\n\t      // ignore invalid JSON\n\t    }\n\t  };\n\t};\n\t\n\tvar initialView = function initialView(selector, renderRoot, tracerModel) {\n\t  var target = document.querySelector(selector);\n\t\n\t  if (target) {\n\t    var viewHtml = \"<div><input id='\" + tracerId + \"' type='range' min='0' max='\" + String(tracerModel.tracerStates.length - 1) + \"' value='\" + String(tracerModel.tracerIndex) + \"' style='width: 100%'/>\" + \"<div id='\" + tracerIndexId + \"'>\" + String(tracerModel.tracerIndex) + \"</div>\" + \"<textarea id='\" + tracerUpdateId + \"' rows='2' cols='40' style='display: block'></textarea>\" + \"<textarea id='\" + tracerModelId + \"' rows='2' cols='40' style='display: block'></textarea></div>\";\n\t\n\t    target.innerHTML = viewHtml;\n\t    document.getElementById(tracerId).addEventListener(\"input\", onSliderChange(renderRoot, tracerModel));\n\t    document.getElementById(tracerModelId).addEventListener(\"keyup\", onModelChange(renderRoot));\n\t  }\n\t};\n\t\n\texports.initialView = initialView;\n\texports.updateView = updateView;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar receiveUpdate = function receiveUpdate(tracerModel, view) {\n\t  return function (model, update) {\n\t    console.log(\"receiveUpdate:\", model, update);\n\t    var modelCopy = JSON.parse(JSON.stringify(model));\n\t    var modelAndUpdate = { model: modelCopy, update: update };\n\t    tracerModel.tracerStates.push(modelAndUpdate);\n\t    tracerModel.tracerIndex = tracerModel.tracerStates.length - 1;\n\t    console.log(\"tracerIndex:\", tracerModel.tracerIndex);\n\t    console.log(\"--receiveUpdate\");\n\t\n\t    view(modelAndUpdate, tracerModel);\n\t\n\t    return model;\n\t  };\n\t};\n\t\n\texports.default = receiveUpdate;\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** meiosis-tracer.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 34f4f2c1f01af719c33c\n **/","import { meiosisTracer } from \"./meiosis-tracer\";\n\nmodule.exports = meiosisTracer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import { initialModel } from \"./model\";\nimport { initialView, updateView } from \"./view\";\nimport receiveUpdate from \"./receiveUpdate\";\n\nconst tracerModel = initialModel;\n\nconst meiosisTracer = (createComponent, renderRoot, selector) => {\n  createComponent({\n    receiveUpdate: receiveUpdate(tracerModel, updateView)\n  });\n  initialView(selector, renderRoot, tracerModel);\n};\n\nexport { meiosisTracer };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/meiosis-tracer.js\n **/","const initialModel = {\n  tracerStates: [],\n  tracerIndex: 0\n};\n\nexport { initialModel };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/model.js\n **/","const tracerId = \"tracerSlider\";\nconst tracerIndexId = \"tracerIndex\";\nconst tracerModelId = \"tracerModel\";\nconst tracerUpdateId = \"tracerUpdate\";\n\nconst updateView = ({model, update}, tracerModel) => {\n  const tracer = document.getElementById(tracerId);\n  tracer.setAttribute(\"max\", String(tracerModel.tracerStates.length - 1));\n  tracer.value = String(tracerModel.tracerIndex);\n  console.log(\"updateView: index=\", tracerModel.tracerIndex, \"max=\", tracerModel.tracerStates.length - 1);\n\n  const tracerIndex = document.getElementById(tracerIndexId);\n  tracerIndex.innerHTML = String(tracerModel.tracerIndex);\n\n  const tracerModelEl = document.getElementById(tracerModelId);\n  tracerModelEl.innerHTML = JSON.stringify(model);\n\n  const tracerUpdateEl = document.getElementById(tracerUpdateId);\n  tracerUpdateEl.innerHTML = JSON.stringify(update);\n  console.log(\"--updateView\");\n};\n\nconst onSliderChange = (renderRoot, tracerModel) => evt => {\n  const index = parseInt(evt.target.value, 10);\n  console.log(\"onSliderChange:\", index);\n  const snapshot = tracerModel.tracerStates[index];\n  console.log(\"snapshot:\", snapshot.model);\n  renderRoot(snapshot.model);\n  tracerModel.tracerIndex = index;\n  updateView(snapshot, tracerModel);\n  console.log(\"--onSliderChange\");\n};\n\nconst onModelChange = renderRoot => evt => {\n  try {\n    const model = JSON.parse(evt.target.value);\n    renderRoot(model);\n  }\n  catch (err) {\n    // ignore invalid JSON\n  }\n};\n\nconst initialView = (selector, renderRoot, tracerModel) => {\n  const target = document.querySelector(selector);\n\n  if (target) {\n    const viewHtml = \"<div><input id='\" + tracerId + \"' type='range' min='0' max='\" +\n      String(tracerModel.tracerStates.length - 1) +\n      \"' value='\" + String(tracerModel.tracerIndex) + \"' style='width: 100%'/>\" +\n      \"<div id='\" + tracerIndexId + \"'>\" + String(tracerModel.tracerIndex) + \"</div>\" +\n      \"<textarea id='\" + tracerUpdateId + \"' rows='2' cols='40' style='display: block'></textarea>\" +\n      \"<textarea id='\" + tracerModelId + \"' rows='2' cols='40' style='display: block'></textarea></div>\";\n\n    target.innerHTML = viewHtml;\n    document.getElementById(tracerId).addEventListener(\"input\", onSliderChange(renderRoot, tracerModel));\n    document.getElementById(tracerModelId).addEventListener(\"keyup\", onModelChange(renderRoot));\n  }\n};\n\nexport { initialView, updateView };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/view.js\n **/","const receiveUpdate = (tracerModel, view) => (model, update) => {\n  console.log(\"receiveUpdate:\", model, update);\n  const modelCopy = JSON.parse(JSON.stringify(model));\n  const modelAndUpdate = { model: modelCopy, update };\n  tracerModel.tracerStates.push(modelAndUpdate);\n  tracerModel.tracerIndex = tracerModel.tracerStates.length - 1;\n  console.log(\"tracerIndex:\", tracerModel.tracerIndex);\n  console.log(\"--receiveUpdate\");\n\n  view(modelAndUpdate, tracerModel);\n\n  return model;\n};\n\nexport default receiveUpdate;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/receiveUpdate.js\n **/"],"sourceRoot":""}