{"version":3,"sources":["webpack:///meiosis.min.js","webpack:///webpack/bootstrap 7c54fdb74939ef8790fd","webpack:///./src/index.ts","webpack:///./src/meiosis.ts","webpack:///./src/merge.ts","webpack:///./src/wire.ts"],"names":["meiosis","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","meiosis_1","merge_1","wire_1","adapters","allReceiveUpdates","allReadies","allPostRenders","wire","defaultWire","rootWire","merge","defaultMerge","rootModel","createComponent","config","actions","nextUpdate","initialModel","ready","receiveUpdate","view","Error","componentWire","sendUpdate","emit","sendUpdateActions","push","postRender","listen","update","forEach","model","run","root","length","renderRoot","rootView","render","target","sources","_i","arguments","undefined","TypeError","output","Object","index","source","nextKey","hasOwnProperty","wires","nextWireId","createWire","listener","lstnr","data","wireName","name","theWire"],"mappings":"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","file":"meiosis.min.js","sourcesContent":["var meiosis =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar meiosis_1 = __webpack_require__(1);\n\tmodule.exports = meiosis_1.meiosis;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar merge_1 = __webpack_require__(2);\n\tvar wire_1 = __webpack_require__(3);\n\tvar meiosis = function (adapters) {\n\t    var allReceiveUpdates = [];\n\t    var allReadies = [];\n\t    var allPostRenders = [];\n\t    var wire = adapters.wire || wire_1.defaultWire;\n\t    var rootWire = wire(\"meiosis\");\n\t    var merge = adapters.merge || merge_1.defaultMerge;\n\t    var rootModel = {};\n\t    var createComponent = function (config) {\n\t        if (!config || (!config.actions &&\n\t            !config.nextUpdate &&\n\t            !config.initialModel &&\n\t            !config.ready &&\n\t            !config.receiveUpdate &&\n\t            !config.view)) {\n\t            throw new Error(\"Please specify a config when calling createComponent.\");\n\t        }\n\t        var initialModel = config.initialModel || {};\n\t        rootModel = merge(rootModel, initialModel);\n\t        var componentWire = wire();\n\t        var sendUpdate = componentWire.emit;\n\t        var sendUpdateActions = { sendUpdate: sendUpdate };\n\t        var actions = config.actions ? merge(sendUpdateActions, config.actions(sendUpdate)) : sendUpdateActions;\n\t        var receiveUpdate = config.receiveUpdate;\n\t        if (receiveUpdate) {\n\t            allReceiveUpdates.push(receiveUpdate);\n\t        }\n\t        var ready = config.ready;\n\t        if (ready) {\n\t            allReadies.push(function () { return ready(actions); });\n\t        }\n\t        var postRender = config.postRender;\n\t        if (postRender) {\n\t            allPostRenders.push(postRender);\n\t        }\n\t        componentWire.listen(function (update) {\n\t            allReceiveUpdates.forEach(function (receiveUpdate) {\n\t                rootModel = receiveUpdate(rootModel, update);\n\t                return rootModel;\n\t            });\n\t            rootWire.emit(rootModel);\n\t            if (config.nextUpdate) {\n\t                config.nextUpdate(rootModel, update, actions);\n\t            }\n\t        });\n\t        return function (model) { return config.view(model, actions); };\n\t    };\n\t    var run = function (root) {\n\t        if (allReceiveUpdates.length === 0) {\n\t            allReceiveUpdates.push(merge);\n\t        }\n\t        var renderRoot = function (model) {\n\t            var rootView = root(model);\n\t            adapters.render(rootView);\n\t            allPostRenders.forEach(function (postRender) { return postRender(rootView); });\n\t        };\n\t        rootWire.listen(renderRoot);\n\t        rootWire.emit(rootModel);\n\t        allReadies.forEach(function (ready) { return ready(); });\n\t        return renderRoot;\n\t    };\n\t    return { createComponent: createComponent, run: run };\n\t};\n\texports.meiosis = meiosis;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar defaultMerge = function (target) {\n\t    var sources = [];\n\t    for (var _i = 1; _i < arguments.length; _i++) {\n\t        sources[_i - 1] = arguments[_i];\n\t    }\n\t    if (target === undefined || target === null) {\n\t        throw new TypeError(\"Cannot convert undefined or null to object\");\n\t    }\n\t    var output = Object(target);\n\t    for (var index = 1; index < arguments.length; index++) {\n\t        var source = arguments[index];\n\t        if (source !== undefined && source !== null) {\n\t            for (var nextKey in source) {\n\t                if (source.hasOwnProperty(nextKey)) {\n\t                    output[nextKey] = source[nextKey];\n\t                }\n\t            }\n\t        }\n\t    }\n\t    return output;\n\t};\n\texports.defaultMerge = defaultMerge;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar defaultWire = (function () {\n\t    var wires = {};\n\t    var nextWireId = 1;\n\t    var createWire = function () {\n\t        var listener = null;\n\t        var listen = function (lstnr) { return listener = lstnr; };\n\t        var emit = function (data) { return listener(data); };\n\t        return { emit: emit, listen: listen };\n\t    };\n\t    return function (wireName) {\n\t        var name = wireName;\n\t        if (!name) {\n\t            name = \"wire_\" + nextWireId;\n\t            nextWireId++;\n\t        }\n\t        var theWire = wires[name];\n\t        if (!theWire) {\n\t            theWire = createWire();\n\t            wires[name] = theWire;\n\t        }\n\t        return theWire;\n\t    };\n\t})();\n\texports.defaultWire = defaultWire;\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** meiosis.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7c54fdb74939ef8790fd\n **/","import { meiosis } from \"./meiosis\";\n\nexport = meiosis;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.ts\n **/","import { Adapters } from \"./adapters\";\nimport { Config } from \"./config\";\nimport { Merger, defaultMerge } from \"./merge\";\nimport { NextUpdate } from \"./nextUpdate\";\nimport { PostRender } from \"./postRender\";\nimport { Ready } from \"./ready\";\nimport { ReceiveUpdate } from \"./receiveUpdate\";\nimport { Emitter, Listener, WireCreator, Wire, defaultWire } from \"./wire\";\n\ninterface Component {\n  (props: any): any;\n}\n\ninterface CreateComponent {\n  (config: Config): Component;\n}\n\ninterface MeiosisInstance {\n  createComponent: CreateComponent;\n}\n\ninterface Meiosis {\n  (adapters: Adapters): MeiosisInstance;\n}\n\nconst meiosis = (adapters: Adapters) => {\n  let allReceiveUpdates: Array<ReceiveUpdate> = [];\n  let allReadies: Array<Ready> = [];\n  let allPostRenders: Array<PostRender> = [];\n\n  const wire: WireCreator = adapters.wire || defaultWire;\n  const rootWire = wire(\"meiosis\");\n\n  const merge: Merger = adapters.merge || defaultMerge;\n\n  let rootModel: any = {};\n\n  const createComponent = (config: Config) => {\n    if (!config || (\n      !config.actions &&\n      !config.nextUpdate &&\n      !config.initialModel &&\n      !config.ready &&\n      !config.receiveUpdate &&\n      !config.view\n    )) {\n      throw new Error(\"Please specify a config when calling createComponent.\");\n    }\n    const initialModel: any = config.initialModel || {};\n    rootModel = merge(rootModel, initialModel);\n\n    const componentWire: Wire = wire();\n    const sendUpdate: Emitter = componentWire.emit;\n    const sendUpdateActions = {sendUpdate};\n    const actions = config.actions ? merge(sendUpdateActions, config.actions(sendUpdate)) : sendUpdateActions;\n\n    const receiveUpdate: ReceiveUpdate = config.receiveUpdate;\n    if (receiveUpdate) {\n      allReceiveUpdates.push(receiveUpdate);\n    }\n\n    const ready: Ready = config.ready;\n    if (ready) {\n      allReadies.push(() => ready(actions));\n    }\n\n    const postRender: PostRender = config.postRender;\n    if (postRender) {\n      allPostRenders.push(postRender);\n    }\n\n    componentWire.listen((update: any) => {\n      allReceiveUpdates.forEach((receiveUpdate: ReceiveUpdate) => {\n        rootModel = receiveUpdate(rootModel, update);\n        return rootModel;\n      });\n\n      rootWire.emit(rootModel);\n\n      if (config.nextUpdate) {\n        config.nextUpdate(rootModel, update, actions);\n      }\n    });\n\n    return (model: any) => config.view(model, actions);\n  };\n\n  const run = (root: Component) => {\n    if (allReceiveUpdates.length === 0) {\n      allReceiveUpdates.push(merge);\n    }\n    const renderRoot = (model: any) => {\n      const rootView = root(model);\n      adapters.render(rootView);\n      allPostRenders.forEach((postRender: PostRender) => postRender(rootView));\n    };\n    rootWire.listen(renderRoot);\n\n    rootWire.emit(rootModel);\n    allReadies.forEach((ready: Function) => ready());\n\n    return renderRoot;\n  };\n\n  return { createComponent, run };\n};\n\nexport { meiosis };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/meiosis.ts\n **/","interface Merger {\n  (target: any, ...sources: Array<any>): any;\n}\n\nconst defaultMerge: Merger = function(target: any, ...sources: Array<any>) {\n  if (target === undefined || target === null) {\n    throw new TypeError(\"Cannot convert undefined or null to object\");\n  }\n\n  let output = Object(target);\n  for (let index = 1; index < arguments.length; index++) {\n    const source = arguments[index];\n    if (source !== undefined && source !== null) {\n      for (let nextKey in source) {\n        if (source.hasOwnProperty(nextKey)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n  }\n  return output;\n};\n\nexport { Merger, defaultMerge };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/merge.ts\n **/","interface Listener {\n  (data: any): any;\n}\n\ninterface Emitter {\n  (data: any): any;\n}\n\ninterface Wire {\n  emit: Emitter;\n  listen(listener: Listener): any;\n}\n\ninterface WireCreator {\n  (wireName?: string): Wire;\n}\n\nconst defaultWire: WireCreator = (function() {\n  let wires = {};\n  let nextWireId = 1;\n\n  const createWire = function(): Wire {\n    let listener: Listener = null;\n    const listen = (lstnr: Listener) => listener = lstnr;\n    const emit = (data: any) => listener(data);\n\n    return { emit, listen };\n  };\n\n  return function(wireName: string) {\n    let name = wireName;\n    if (!name) {\n      name = \"wire_\" + nextWireId;\n      nextWireId++;\n    }\n    let theWire: Wire = wires[name];\n    if (!theWire) {\n      theWire = createWire();\n      wires[name] = theWire;\n    }\n    return theWire;\n  };\n})();\n\nexport { Emitter, Listener, Wire, WireCreator, defaultWire };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/wire.ts\n **/"],"sourceRoot":""}