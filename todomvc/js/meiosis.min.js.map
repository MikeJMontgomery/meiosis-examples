{"version":3,"sources":["webpack:///meiosis.min.js","webpack:///webpack/bootstrap fa3a17935f291f450f31","webpack:///./src/index.ts","webpack:///./src/meiosis.ts","webpack:///./src/merge.ts","webpack:///./src/wire.ts"],"names":["meiosis","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","meiosis_1","merge_1","wire_1","meiosisFunction","adapters","allReceiveUpdates","allReadies","allPostRenders","wire","defaultWire","rootWire","merge","defaultMerge","rootModel","createComponent","config","actions","nextUpdate","initialModel","ready","receiveUpdate","view","Error","componentWire","sendUpdate","emit","sendUpdateActions","push","postRender","listen","update","accepted","i","length","receiveUpdate_1","receivedUpdate","REFUSE_UPDATE","model","run","root","renderRoot","rootView","render","forEach","meiosisInstance","target","sources","_i","arguments","undefined","TypeError","output","Object","index","source","nextKey","hasOwnProperty","wires","nextWireId","createWire","listener","lstnr","data","wireName","name","theWire"],"mappings":"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","file":"meiosis.min.js","sourcesContent":["var meiosis =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar meiosis_1 = __webpack_require__(1);\n\tmodule.exports = meiosis_1.meiosis;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar merge_1 = __webpack_require__(2);\n\tvar wire_1 = __webpack_require__(3);\n\tvar meiosis = (function () {\n\t    var meiosisFunction = function (adapters) {\n\t        var allReceiveUpdates = [];\n\t        var allReadies = [];\n\t        var allPostRenders = [];\n\t        var wire = adapters.wire || wire_1.defaultWire;\n\t        var rootWire = wire(\"meiosis\");\n\t        var merge = adapters.merge || merge_1.defaultMerge;\n\t        var rootModel = {};\n\t        var createComponent = function (config) {\n\t            if (!config || (!config.actions &&\n\t                !config.nextUpdate &&\n\t                !config.initialModel &&\n\t                !config.ready &&\n\t                !config.receiveUpdate &&\n\t                !config.view)) {\n\t                throw new Error(\"Please specify a config when calling createComponent.\");\n\t            }\n\t            var initialModel = config.initialModel || {};\n\t            rootModel = merge(rootModel, initialModel);\n\t            var componentWire = wire();\n\t            var sendUpdate = componentWire.emit;\n\t            var sendUpdateActions = { sendUpdate: sendUpdate };\n\t            var actions = config.actions ? merge(sendUpdateActions, config.actions(sendUpdate)) : sendUpdateActions;\n\t            var receiveUpdate = config.receiveUpdate;\n\t            if (receiveUpdate) {\n\t                allReceiveUpdates.push(receiveUpdate);\n\t            }\n\t            var ready = config.ready;\n\t            if (ready) {\n\t                allReadies.push(function () { return ready(actions); });\n\t            }\n\t            var postRender = config.postRender;\n\t            if (postRender) {\n\t                allPostRenders.push(postRender);\n\t            }\n\t            componentWire.listen(function (update) {\n\t                var accepted = true;\n\t                for (var i = 0; i < allReceiveUpdates.length; i++) {\n\t                    var receiveUpdate_1 = allReceiveUpdates[i];\n\t                    var receivedUpdate = receiveUpdate_1(rootModel, update);\n\t                    if (receivedUpdate === meiosisFunction.REFUSE_UPDATE) {\n\t                        accepted = false;\n\t                        break;\n\t                    }\n\t                    else {\n\t                        rootModel = receivedUpdate;\n\t                    }\n\t                }\n\t                ;\n\t                if (accepted) {\n\t                    rootWire.emit(rootModel);\n\t                    if (config.nextUpdate) {\n\t                        config.nextUpdate(rootModel, update, actions);\n\t                    }\n\t                }\n\t            });\n\t            return function (model) { return config.view(model, actions); };\n\t        };\n\t        var run = function (root) {\n\t            if (allReceiveUpdates.length === 0) {\n\t                allReceiveUpdates.push(merge);\n\t            }\n\t            var renderRoot = function (model) {\n\t                var rootView = root(model);\n\t                adapters.render(rootView);\n\t                allPostRenders.forEach(function (postRender) { return postRender(rootView); });\n\t            };\n\t            rootWire.listen(renderRoot);\n\t            rootWire.emit(rootModel);\n\t            allReadies.forEach(function (ready) { return ready(); });\n\t            return renderRoot;\n\t        };\n\t        var meiosisInstance = { createComponent: createComponent, run: run };\n\t        return meiosisInstance;\n\t    };\n\t    meiosisFunction.REFUSE_UPDATE = {};\n\t    return meiosisFunction;\n\t})();\n\texports.meiosis = meiosis;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar defaultMerge = function (target) {\n\t    var sources = [];\n\t    for (var _i = 1; _i < arguments.length; _i++) {\n\t        sources[_i - 1] = arguments[_i];\n\t    }\n\t    if (target === undefined || target === null) {\n\t        throw new TypeError(\"Cannot convert undefined or null to object\");\n\t    }\n\t    var output = Object(target);\n\t    for (var index = 1; index < arguments.length; index++) {\n\t        var source = arguments[index];\n\t        if (source !== undefined && source !== null) {\n\t            for (var nextKey in source) {\n\t                if (source.hasOwnProperty(nextKey)) {\n\t                    output[nextKey] = source[nextKey];\n\t                }\n\t            }\n\t        }\n\t    }\n\t    return output;\n\t};\n\texports.defaultMerge = defaultMerge;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar defaultWire = (function () {\n\t    var wires = {};\n\t    var nextWireId = 1;\n\t    var createWire = function () {\n\t        var listener = null;\n\t        var listen = function (lstnr) { return listener = lstnr; };\n\t        var emit = function (data) { return listener(data); };\n\t        return { emit: emit, listen: listen };\n\t    };\n\t    return function (wireName) {\n\t        var name = wireName;\n\t        if (!name) {\n\t            name = \"wire_\" + nextWireId;\n\t            nextWireId++;\n\t        }\n\t        var theWire = wires[name];\n\t        if (!theWire) {\n\t            theWire = createWire();\n\t            wires[name] = theWire;\n\t        }\n\t        return theWire;\n\t    };\n\t})();\n\texports.defaultWire = defaultWire;\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** meiosis.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap fa3a17935f291f450f31\n **/","import { meiosis } from \"./meiosis\";\n\nexport = meiosis;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.ts\n **/","import { Adapters } from \"./adapters\";\nimport { Config } from \"./config\";\nimport { Merger, defaultMerge } from \"./merge\";\nimport { NextUpdate } from \"./nextUpdate\";\nimport { PostRender } from \"./postRender\";\nimport { Ready } from \"./ready\";\nimport { ReceiveUpdate } from \"./receiveUpdate\";\nimport { Emitter, Listener, WireCreator, Wire, defaultWire } from \"./wire\";\n\ninterface Component {\n  (model: any): any;\n}\n\ninterface CreateComponent {\n  (config: Config): Component;\n}\n\ninterface Run {\n  (model: any): any;\n}\n\ninterface MeiosisInstance {\n  createComponent: CreateComponent;\n  run: Run;\n}\n\ninterface Meiosis {\n  (adapters: Adapters): MeiosisInstance;\n  REFUSE_UPDATE: Object;\n}\n\nconst meiosis: Meiosis = (() => {\n  const meiosisFunction: any = (adapters: Adapters) => {\n    let allReceiveUpdates: Array<ReceiveUpdate> = [];\n    let allReadies: Array<Ready> = [];\n    let allPostRenders: Array<PostRender> = [];\n\n    const wire: WireCreator = adapters.wire || defaultWire;\n    const rootWire = wire(\"meiosis\");\n\n    const merge: Merger = adapters.merge || defaultMerge;\n\n    let rootModel: any = {};\n\n    const createComponent: CreateComponent = (config: Config) => {\n      if (!config || (\n        !config.actions &&\n        !config.nextUpdate &&\n        !config.initialModel &&\n        !config.ready &&\n        !config.receiveUpdate &&\n        !config.view\n      )) {\n        throw new Error(\"Please specify a config when calling createComponent.\");\n      }\n      const initialModel: any = config.initialModel || {};\n      rootModel = merge(rootModel, initialModel);\n\n      const componentWire: Wire = wire();\n      const sendUpdate: Emitter = componentWire.emit;\n      const sendUpdateActions = {sendUpdate};\n      const actions = config.actions ? merge(sendUpdateActions, config.actions(sendUpdate)) : sendUpdateActions;\n\n      const receiveUpdate: ReceiveUpdate = config.receiveUpdate;\n      if (receiveUpdate) {\n        allReceiveUpdates.push(receiveUpdate);\n      }\n\n      const ready: Ready = config.ready;\n      if (ready) {\n        allReadies.push(() => ready(actions));\n      }\n\n      const postRender: PostRender = config.postRender;\n      if (postRender) {\n        allPostRenders.push(postRender);\n      }\n\n      componentWire.listen((update: any) => {\n        let accepted = true;\n\n        for (let i: number = 0; i < allReceiveUpdates.length; i++) {\n          const receiveUpdate: ReceiveUpdate = allReceiveUpdates[i];\n          const receivedUpdate = receiveUpdate(rootModel, update);\n\n          if (receivedUpdate === meiosisFunction.REFUSE_UPDATE) {\n            accepted = false;\n            break;\n          }\n          else {\n            rootModel = receivedUpdate;\n          }\n        };\n\n        if (accepted) {\n          rootWire.emit(rootModel);\n\n          if (config.nextUpdate) {\n            config.nextUpdate(rootModel, update, actions);\n          }\n        }\n      });\n\n      return (model: any) => config.view(model, actions);\n    };\n\n    const run = (root: Component) => {\n      if (allReceiveUpdates.length === 0) {\n        allReceiveUpdates.push(merge);\n      }\n      const renderRoot = (model: any) => {\n        const rootView = root(model);\n        adapters.render(rootView);\n        allPostRenders.forEach((postRender: PostRender) => postRender(rootView));\n      };\n      rootWire.listen(renderRoot);\n\n      rootWire.emit(rootModel);\n      allReadies.forEach((ready: Function) => ready());\n\n      return renderRoot;\n    };\n\n    const meiosisInstance: MeiosisInstance = { createComponent, run };\n\n    return meiosisInstance;\n  };\n\n  meiosisFunction.REFUSE_UPDATE = {};\n\n  return <Meiosis>meiosisFunction;\n})();\n\nexport { meiosis };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/meiosis.ts\n **/","interface Merger {\n  (target: any, ...sources: Array<any>): any;\n}\n\nconst defaultMerge: Merger = function(target: any, ...sources: Array<any>) {\n  if (target === undefined || target === null) {\n    throw new TypeError(\"Cannot convert undefined or null to object\");\n  }\n\n  let output = Object(target);\n  for (let index = 1; index < arguments.length; index++) {\n    const source = arguments[index];\n    if (source !== undefined && source !== null) {\n      for (let nextKey in source) {\n        if (source.hasOwnProperty(nextKey)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n  }\n  return output;\n};\n\nexport { Merger, defaultMerge };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/merge.ts\n **/","interface Listener {\n  (data: any): any;\n}\n\ninterface Emitter {\n  (data: any): any;\n}\n\ninterface Wire {\n  emit: Emitter;\n  listen(listener: Listener): any;\n}\n\ninterface WireCreator {\n  (wireName?: string): Wire;\n}\n\nconst defaultWire: WireCreator = (function() {\n  let wires = {};\n  let nextWireId = 1;\n\n  const createWire = function(): Wire {\n    let listener: Listener = null;\n    const listen = (lstnr: Listener) => listener = lstnr;\n    const emit = (data: any) => listener(data);\n\n    return { emit, listen };\n  };\n\n  return function(wireName: string) {\n    let name = wireName;\n    if (!name) {\n      name = \"wire_\" + nextWireId;\n      nextWireId++;\n    }\n    let theWire: Wire = wires[name];\n    if (!theWire) {\n      theWire = createWire();\n      wires[name] = theWire;\n    }\n    return theWire;\n  };\n})();\n\nexport { Emitter, Listener, Wire, WireCreator, defaultWire };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/wire.ts\n **/"],"sourceRoot":""}